<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="gtest-port_8h" kind="file">
    <compoundname>gtest-port.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includedby refid="gtest-param-test_8h" local="no">Escritorio/EC3/src/gtest/gtest-param-test.h</includedby>
    <includedby refid="gtest-typed-test_8h" local="no">Escritorio/EC3/src/gtest/gtest-typed-test.h</includedby>
    <includedby refid="gtest-internal_8h" local="no">Escritorio/EC3/src/gtest/internal/gtest-internal.h</includedby>
    <includedby refid="gtest-linked__ptr_8h" local="no">Escritorio/EC3/src/gtest/internal/gtest-linked_ptr.h</includedby>
    <includedby refid="gtest-param-util-generated_8h" local="no">Escritorio/EC3/src/gtest/internal/gtest-param-util-generated.h</includedby>
    <includedby refid="gtest-param-util_8h" local="no">Escritorio/EC3/src/gtest/internal/gtest-param-util.h</includedby>
    <includedby refid="gtest-string_8h" local="no">Escritorio/EC3/src/gtest/internal/gtest-string.h</includedby>
    <includedby refid="gtest-type-util_8h" local="no">Escritorio/EC3/src/gtest/internal/gtest-type-util.h</includedby>
    <incdepgraph>
      <node id="712">
        <label>stdlib.h</label>
      </node>
      <node id="715">
        <label>string</label>
      </node>
      <node id="711">
        <label>Escritorio/EC3/src/gtest/internal/gtest-port.h</label>
        <link refid="gtest-port.h"/>
        <childnode refid="712" relation="include">
        </childnode>
        <childnode refid="713" relation="include">
        </childnode>
        <childnode refid="714" relation="include">
        </childnode>
        <childnode refid="715" relation="include">
        </childnode>
        <childnode refid="716" relation="include">
        </childnode>
      </node>
      <node id="716">
        <label>sstream</label>
      </node>
      <node id="714">
        <label>iostream</label>
      </node>
      <node id="713">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="724">
        <label>Escritorio/EC3/src/testcolagen.cpp</label>
        <link refid="testcolagen_8cpp"/>
      </node>
      <node id="730">
        <label>Escritorio/EC3/src/testpuerta.cpp</label>
        <link refid="testpuerta_8cpp"/>
      </node>
      <node id="728">
        <label>Escritorio/EC3/src/testplanta.cpp</label>
        <link refid="testplanta_8cpp"/>
      </node>
      <node id="734">
        <label>Escritorio/EC3/src/gtest/gtest-test-part.h</label>
        <link refid="gtest-test-part_8h"/>
        <childnode refid="719" relation="include">
        </childnode>
      </node>
      <node id="729">
        <label>Escritorio/EC3/src/testprision.cpp</label>
        <link refid="testprision_8cpp"/>
      </node>
      <node id="739">
        <label>Escritorio/EC3/src/gtest/internal/gtest-param-util.h</label>
        <link refid="gtest-param-util_8h"/>
      </node>
      <node id="718">
        <label>Escritorio/EC3/src/gtest/gtest-param-test.h</label>
        <link refid="gtest-param-test_8h"/>
        <childnode refid="719" relation="include">
        </childnode>
      </node>
      <node id="722">
        <label>Escritorio/EC3/src/testarbol.cpp</label>
        <link refid="testarbol_8cpp"/>
      </node>
      <node id="720">
        <label>Escritorio/EC3/src/ec3.cpp</label>
        <link refid="ec3_8cpp"/>
      </node>
      <node id="726">
        <label>Escritorio/EC3/src/testllave.cpp</label>
        <link refid="testllave_8cpp"/>
      </node>
      <node id="723">
        <label>Escritorio/EC3/src/testcelda.cpp</label>
        <link refid="testcelda_8cpp"/>
      </node>
      <node id="733">
        <label>Escritorio/EC3/src/gtest/gtest-message.h</label>
        <link refid="gtest-message_8h"/>
        <childnode refid="719" relation="include">
        </childnode>
      </node>
      <node id="736">
        <label>Escritorio/EC3/src/gtest/gtest-death-test.h</label>
        <link refid="gtest-death-test_8h"/>
        <childnode refid="719" relation="include">
        </childnode>
      </node>
      <node id="721">
        <label>Escritorio/EC3/src/gtest/gtest-spi.h</label>
        <link refid="gtest-spi_8h"/>
      </node>
      <node id="735">
        <label>Escritorio/EC3/src/gtest/internal/gtest-death-test-internal.h</label>
        <link refid="gtest-death-test-internal_8h"/>
        <childnode refid="736" relation="include">
        </childnode>
      </node>
      <node id="731">
        <label>Escritorio/EC3/src/gtest/gtest-typed-test.h</label>
        <link refid="gtest-typed-test_8h"/>
        <childnode refid="719" relation="include">
        </childnode>
      </node>
      <node id="725">
        <label>Escritorio/EC3/src/testgrafo.cpp</label>
        <link refid="testgrafo_8cpp"/>
      </node>
      <node id="740">
        <label>Escritorio/EC3/src/gtest/internal/gtest-string.h</label>
        <link refid="gtest-string_8h"/>
        <childnode refid="733" relation="include">
        </childnode>
        <childnode refid="734" relation="include">
        </childnode>
        <childnode refid="719" relation="include">
        </childnode>
        <childnode refid="741" relation="include">
        </childnode>
        <childnode refid="732" relation="include">
        </childnode>
        <childnode refid="742" relation="include">
        </childnode>
      </node>
      <node id="717">
        <label>Escritorio/EC3/src/gtest/internal/gtest-port.h</label>
        <link refid="gtest-port.h"/>
        <childnode refid="718" relation="include">
        </childnode>
        <childnode refid="731" relation="include">
        </childnode>
        <childnode refid="732" relation="include">
        </childnode>
        <childnode refid="737" relation="include">
        </childnode>
        <childnode refid="738" relation="include">
        </childnode>
        <childnode refid="739" relation="include">
        </childnode>
        <childnode refid="740" relation="include">
        </childnode>
        <childnode refid="742" relation="include">
        </childnode>
      </node>
      <node id="738">
        <label>Escritorio/EC3/src/gtest/internal/gtest-param-util-generated.h</label>
        <link refid="gtest-param-util-generated_8h"/>
      </node>
      <node id="719">
        <label>Escritorio/EC3/src/gtest/gtest.h</label>
        <link refid="gtest_8h"/>
        <childnode refid="720" relation="include">
        </childnode>
        <childnode refid="721" relation="include">
        </childnode>
        <childnode refid="722" relation="include">
        </childnode>
        <childnode refid="723" relation="include">
        </childnode>
        <childnode refid="724" relation="include">
        </childnode>
        <childnode refid="725" relation="include">
        </childnode>
        <childnode refid="726" relation="include">
        </childnode>
        <childnode refid="727" relation="include">
        </childnode>
        <childnode refid="728" relation="include">
        </childnode>
        <childnode refid="729" relation="include">
        </childnode>
        <childnode refid="730" relation="include">
        </childnode>
      </node>
      <node id="737">
        <label>Escritorio/EC3/src/gtest/internal/gtest-linked_ptr.h</label>
        <link refid="gtest-linked__ptr_8h"/>
      </node>
      <node id="727">
        <label>Escritorio/EC3/src/testpersona.cpp</label>
        <link refid="testpersona_8cpp"/>
      </node>
      <node id="732">
        <label>Escritorio/EC3/src/gtest/internal/gtest-internal.h</label>
        <link refid="gtest-internal_8h"/>
        <childnode refid="733" relation="include">
        </childnode>
        <childnode refid="734" relation="include">
        </childnode>
        <childnode refid="719" relation="include">
        </childnode>
        <childnode refid="735" relation="include">
        </childnode>
      </node>
      <node id="742">
        <label>Escritorio/EC3/src/gtest/internal/gtest-type-util.h</label>
        <link refid="gtest-type-util_8h"/>
        <childnode refid="731" relation="include">
        </childnode>
        <childnode refid="732" relation="include">
        </childnode>
      </node>
      <node id="741">
        <label>Escritorio/EC3/src/gtest/internal/gtest-filepath.h</label>
        <link refid="gtest-filepath_8h"/>
        <childnode refid="732" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesting_1_1internal_1_1scoped__ptr" prot="public">testing::internal::scoped_ptr</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1Mutex" prot="public">testing::internal::Mutex</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1GTestMutexLock" prot="public">testing::internal::GTestMutexLock</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1ThreadLocal" prot="public">testing::internal::ThreadLocal</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1bool__constant" prot="public">testing::internal::bool_constant</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1is__pointer" prot="public">testing::internal::is_pointer</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1is__pointer_3_01T_01_5_01_4" prot="public">testing::internal::is_pointer&lt; T * &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeWithSize" prot="public">testing::internal::TypeWithSize</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeWithSize_3_014_01_4" prot="public">testing::internal::TypeWithSize&lt; 4 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeWithSize_3_018_01_4" prot="public">testing::internal::TypeWithSize&lt; 8 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1GTestCheckProvider" prot="public">testing::internal::GTestCheckProvider</innerclass>
    <innernamespace refid="namespacetesting">testing</innernamespace>
    <innernamespace refid="namespacetesting_1_1internal">testing::internal</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="gtest-port_8h_1158df8eb2f6338a36f13b8108fb36594" prot="public" static="no">
        <name>GTEST_NAME</name>
        <initializer>&quot;Google Test&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="158" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_16b4cd8e28f94b0a7952d27645d4da3db" prot="public" static="no">
        <name>GTEST_FLAG_PREFIX</name>
        <initializer>&quot;gtest_&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="159" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_14899fab4f05f420b4b184bc05e8ad43b" prot="public" static="no">
        <name>GTEST_FLAG_PREFIX_UPPER</name>
        <initializer>&quot;GTEST_&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="160" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_1fc996bd9a7178c4f459980f9d7c908f1" prot="public" static="no">
        <name>GTEST_HAS_EXCEPTIONS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="208" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_10fd9668b4f6fbe243464becee628432e" prot="public" static="no">
        <name>GTEST_HAS_STD_STRING</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="209" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_145fa310c460409d25247798b01f1f514" prot="public" static="no">
        <name>GTEST_HAS_GLOBAL_STRING</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="218" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_156198e3f351faf67313eaeb0141f47a8" prot="public" static="no">
        <name>GTEST_HAS_STD_WSTRING</name>
        <initializer>GTEST_HAS_STD_STRING</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="233" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_19ed4fa73ee05bba6c3d4a226f13ebe26" prot="public" static="no">
        <name>GTEST_HAS_GLOBAL_WSTRING</name>
        <initializer>GTEST_HAS_GLOBAL_STRING</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="241" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_1916695cd0aa5bf5d9068ce06e82f7a2f" prot="public" static="no">
        <name>GTEST_HAS_RTTI</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="286" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_1b5815d752d5d97ed6b435ba0bb77d61d" prot="public" static="no">
        <name>GTEST_HAS_PTHREAD</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="299" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_13f48676808022aaa0b693087ed18e006" prot="public" static="no">
        <name>GTEST_HAS_TR1_TUPLE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="316" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_11bd86e20372e9ea966be0bc126088448" prot="public" static="no">
        <name>GTEST_HAS_CLONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="345" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_1fef9217bc28183f8b5a0c0341dc0e9ce" prot="public" static="no">
        <name>GTEST_AMBIGUOUS_ELSE_BLOCKER_</name>
        <initializer>switch (0) case 0:</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="405" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_1d6622fc3763a54b78963d4628a535862" prot="public" static="no">
        <name>GTEST_ATTRIBUTE_UNUSED_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="419" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_1b08845a5f4649b939a17c573172fcdeb" prot="public" static="no">
        <name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name>
        <param><defname>type</defname></param>
        <initializer>type(const type &amp;);\
  void operator=(const type &amp;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="426" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_1278b3d9816b7f2389f2cf362e8ba6a3c" prot="public" static="no">
        <name>GTEST_MUST_USE_RESULT_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="436" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_188ad1882d1e6057321ba775eeab7fb26" prot="public" static="no">
        <name>GTEST_LOG_</name>
        <param><defname>severity</defname></param>
        <param><defname>msg</defname></param>
        <initializer>::testing::internal::GTestLog(\
        ::testing::internal::GTEST_##severity, __FILE__, __LINE__, \
        (::<ref refid="classtesting_1_1Message" kindref="compound">testing::Message</ref>() &lt;&lt; (msg)).GetString().c_str())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="575" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="572" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_189a97ba3a99a329609d410cee64ca847" prot="public" static="no">
        <name>GTEST_IS_THREADSAFE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="640" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="640" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_1b4e06887e347fd27742a56dfd5bff91e" prot="public" static="no">
        <name>GTEST_CHECK_</name>
        <param><defname>condition</defname></param>
        <initializer>GTEST_AMBIGUOUS_ELSE_BLOCKER_ \
    if (condition) \
      ; \
    else \
      ::<ref refid="classtesting_1_1internal_1_1GTestCheckProvider" kindref="compound">testing::internal::GTestCheckProvider</ref>(\
          #condition, __FILE__, __LINE__).GetStream()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="825" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="819" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_1a9537b08f663cffc361cdeb940705731" prot="public" static="no">
        <name>GTEST_FLAG</name>
        <param><defname>name</defname></param>
        <initializer>FLAGS_gtest_##name</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="828" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="828" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_1ec8daec67eb6f6ce40bded77d26d76ef" prot="public" static="no">
        <name>GTEST_DECLARE_bool_</name>
        <param><defname>name</defname></param>
        <initializer>extern bool GTEST_FLAG(name)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="831" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="831" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_1c164b439f6e7ff87cb870cd1d274925c" prot="public" static="no">
        <name>GTEST_DECLARE_int32_</name>
        <param><defname>name</defname></param>
        <initializer>extern ::<ref refid="namespacetesting_1_1internal_124b6e0b8ea195d5ccee473d5ade4bcbf" kindref="member">testing::internal::Int32</ref> GTEST_FLAG(name)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="833" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="832" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_1976ec43f6217dde8e3bfded5076b2e5e" prot="public" static="no">
        <name>GTEST_DECLARE_string_</name>
        <param><defname>name</defname></param>
        <initializer>extern ::<ref refid="classtesting_1_1internal_1_1String" kindref="compound">testing::internal::String</ref> GTEST_FLAG(name)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="835" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="834" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_1cb3ab36afc4a59bd29cf3ccff12e5768" prot="public" static="no">
        <name>GTEST_DEFINE_bool_</name>
        <param><defname>name</defname></param>
        <param><defname>default_val</defname></param>
        <param><defname>doc</defname></param>
        <initializer>bool GTEST_FLAG(name) = (default_val)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="839" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="838" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_15255c79a2ea5baa5e66ffdf2eb1f1b77" prot="public" static="no">
        <name>GTEST_DEFINE_int32_</name>
        <param><defname>name</defname></param>
        <param><defname>default_val</defname></param>
        <param><defname>doc</defname></param>
        <initializer>::<ref refid="namespacetesting_1_1internal_124b6e0b8ea195d5ccee473d5ade4bcbf" kindref="member">testing::internal::Int32</ref> GTEST_FLAG(name) = (default_val)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="841" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="840" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest-port_8h_12b3fdd99e7ddfede323b1bf0cd3dc7b0" prot="public" static="no">
        <name>GTEST_DEFINE_string_</name>
        <param><defname>name</defname></param>
        <param><defname>default_val</defname></param>
        <param><defname>doc</defname></param>
        <initializer>::<ref refid="classtesting_1_1internal_1_1String" kindref="compound">testing::internal::String</ref> GTEST_FLAG(name) = (default_val)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" line="843" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h" bodystart="842" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2005,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Authors:<sp/>wan@google.com<sp/>(Zhanyong<sp/>Wan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Low-level<sp/>types<sp/>and<sp/>utilities<sp/>for<sp/>porting<sp/>Google<sp/>Test<sp/>to<sp/>various</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>platforms.<sp/><sp/>They<sp/>are<sp/>subject<sp/>to<sp/>change<sp/>without<sp/>notice.<sp/><sp/>DO<sp/>NOT<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEM<sp/>IN<sp/>USER<sp/>CODE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>user<sp/>can<sp/>define<sp/>the<sp/>following<sp/>macros<sp/>in<sp/>the<sp/>build<sp/>script<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>control<sp/>Google<sp/>Test&apos;s<sp/>behavior.<sp/><sp/>If<sp/>the<sp/>user<sp/>doesn&apos;t<sp/>define<sp/>a<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>list,<sp/>Google<sp/>Test<sp/>will<sp/>define<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_HAS_CLONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Define<sp/>it<sp/>to<sp/>1/0<sp/>to<sp/>indicate<sp/>that<sp/>clone(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is/isn&apos;t<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_HAS_GLOBAL_STRING<sp/><sp/>-<sp/>Define<sp/>it<sp/>to<sp/>1/0<sp/>to<sp/>indicate<sp/>that<sp/>::string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is/isn&apos;t<sp/>available<sp/>(some<sp/>systems<sp/>define</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::string,<sp/>which<sp/>is<sp/>different<sp/>to<sp/>std::string).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_HAS_GLOBAL_WSTRING<sp/>-<sp/>Define<sp/>it<sp/>to<sp/>1/0<sp/>to<sp/>indicate<sp/>that<sp/>::string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is/isn&apos;t<sp/>available<sp/>(some<sp/>systems<sp/>define</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::wstring,<sp/>which<sp/>is<sp/>different<sp/>to<sp/>std::wstring).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_HAS_PTHREAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Define<sp/>it<sp/>to<sp/>1/0<sp/>to<sp/>indicate<sp/>that<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is/isn&apos;t<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_HAS_RTTI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Define<sp/>it<sp/>to<sp/>1/0<sp/>to<sp/>indicate<sp/>that<sp/>RTTI<sp/>is/isn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_HAS_STD_STRING<sp/><sp/><sp/><sp/><sp/>-<sp/>Define<sp/>it<sp/>to<sp/>1/0<sp/>to<sp/>indicate<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>does/doesn&apos;t<sp/>work<sp/>(Google<sp/>Test<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>used<sp/>where<sp/>std::string<sp/>is<sp/>unavailable).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_HAS_STD_WSTRING<sp/><sp/><sp/><sp/>-<sp/>Define<sp/>it<sp/>to<sp/>1/0<sp/>to<sp/>indicate<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::wstring<sp/>does/doesn&apos;t<sp/>work<sp/>(Google<sp/>Test<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>used<sp/>where<sp/>std::wstring<sp/>is<sp/>unavailable).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_HAS_TR1_TUPLE<sp/>1<sp/><sp/><sp/><sp/>-<sp/>Define<sp/>it<sp/>to<sp/>1/0<sp/>to<sp/>indicate<sp/>tr1::tuple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is/isn&apos;t<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>header<sp/>defines<sp/>the<sp/>following<sp/>utilities:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macros<sp/>indicating<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Google<sp/>C++<sp/>Testing<sp/>Framework<sp/>project:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>a<sp/>string<sp/>literal<sp/>of<sp/>the<sp/>project<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_FLAG_PREFIX<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>a<sp/>string<sp/>literal<sp/>of<sp/>the<sp/>prefix<sp/>all<sp/>Google</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test<sp/>flag<sp/>names<sp/>share.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_FLAG_PREFIX_UPPER<sp/>-<sp/>a<sp/>string<sp/>literal<sp/>of<sp/>the<sp/>prefix<sp/>all<sp/>Google</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test<sp/>flag<sp/>names<sp/>share,<sp/>in<sp/>upper<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macros<sp/>indicating<sp/>the<sp/>current<sp/>platform:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_OS_CYGWIN<sp/><sp/><sp/>-<sp/>defined<sp/>iff<sp/>compiled<sp/>on<sp/>Cygwin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_OS_LINUX<sp/><sp/><sp/><sp/>-<sp/>defined<sp/>iff<sp/>compiled<sp/>on<sp/>Linux.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_OS_MAC<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>defined<sp/>iff<sp/>compiled<sp/>on<sp/>Mac<sp/>OS<sp/>X.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_OS_SOLARIS<sp/><sp/>-<sp/>defined<sp/>iff<sp/>compiled<sp/>on<sp/>Sun<sp/>Solaris.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_OS_SYMBIAN<sp/><sp/>-<sp/>defined<sp/>iff<sp/>compiled<sp/>for<sp/>Symbian.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_OS_WINDOWS<sp/><sp/>-<sp/>defined<sp/>iff<sp/>compiled<sp/>on<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_OS_ZOS<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>defined<sp/>iff<sp/>compiled<sp/>on<sp/>IBM<sp/>z/OS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Among<sp/>the<sp/>platforms,<sp/>Cygwin,<sp/>Linux,<sp/>Max<sp/>OS<sp/>X,<sp/>and<sp/>Windows<sp/>have<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>most<sp/>stable<sp/>support.<sp/><sp/>Since<sp/>core<sp/>members<sp/>of<sp/>the<sp/>Google<sp/>Test<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>have<sp/>access<sp/>to<sp/>other<sp/>platforms,<sp/>support<sp/>for<sp/>them<sp/>may<sp/>be<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stable.<sp/><sp/>If<sp/>you<sp/>notice<sp/>any<sp/>problems<sp/>on<sp/>your<sp/>platform,<sp/>please<sp/>notify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>googletestframework@googlegroups.com<sp/>(patches<sp/>for<sp/>fixing<sp/>them<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>even<sp/>more<sp/>welcome!).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>it<sp/>is<sp/>possible<sp/>that<sp/>none<sp/>of<sp/>the<sp/>GTEST_OS_<sp/>macros<sp/>are<sp/>defined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macros<sp/>indicating<sp/>available<sp/>Google<sp/>Test<sp/>features:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_HAS_COMBINE<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>defined<sp/>iff<sp/>Combine<sp/>construct<sp/>is<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>value-parameterized<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_HAS_DEATH_TEST<sp/><sp/><sp/>-<sp/>defined<sp/>iff<sp/>death<sp/>tests<sp/>are<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_HAS_PARAM_TEST<sp/><sp/><sp/>-<sp/>defined<sp/>iff<sp/>value-parameterized<sp/>tests<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_HAS_TYPED_TEST<sp/><sp/><sp/>-<sp/>defined<sp/>iff<sp/>typed<sp/>tests<sp/>are<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_HAS_TYPED_TEST_P<sp/>-<sp/>defined<sp/>iff<sp/>type-parameterized<sp/>tests<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macros<sp/>for<sp/>basic<sp/>C++<sp/>coding:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_AMBIGUOUS_ELSE_BLOCKER_<sp/>-<sp/>for<sp/>disabling<sp/>a<sp/>gcc<sp/>warning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_ATTRIBUTE_UNUSED_<sp/><sp/>-<sp/>declares<sp/>that<sp/>a<sp/>class&apos;<sp/>instances<sp/>don&apos;t<sp/>have<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_<sp/>-<sp/>disables<sp/>copy<sp/>ctor<sp/>and<sp/>operator=.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_MUST_USE_RESULT_<sp/><sp/><sp/>-<sp/>declares<sp/>that<sp/>a<sp/>function&apos;s<sp/>result<sp/>must<sp/>be<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Synchronization:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Mutex,<sp/>MutexLock,<sp/>ThreadLocal,<sp/>GetThreadCount()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>synchronization<sp/>primitives.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_IS_THREADSAFE<sp/>-<sp/>defined<sp/>to<sp/>1<sp/>to<sp/>indicate<sp/>that<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synchronization<sp/>primitives<sp/>have<sp/>real<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>Google<sp/>Test<sp/>is<sp/>thread-safe;<sp/>or<sp/>0<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Template<sp/>meta<sp/>programming:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>is_pointer<sp/><sp/><sp/><sp/><sp/>-<sp/>as<sp/>in<sp/>TR1;<sp/>needed<sp/>on<sp/>Symbian<sp/>and<sp/>IBM<sp/>XL<sp/>C/C++<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smart<sp/>pointers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>scoped_ptr<sp/><sp/><sp/><sp/><sp/>-<sp/>as<sp/>in<sp/>TR2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Regular<sp/>expressions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>RE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>a<sp/>simple<sp/>regular<sp/>expression<sp/>class<sp/>using<sp/>the<sp/>POSIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Extended<sp/>Regular<sp/>Expression<sp/>syntax.<sp/><sp/>Not<sp/>available<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Logging:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_LOG_()<sp/><sp/><sp/>-<sp/>logs<sp/>messages<sp/>at<sp/>the<sp/>specified<sp/>severity<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>LogToStderr()<sp/><sp/>-<sp/>directs<sp/>all<sp/>log<sp/>messages<sp/>to<sp/>stderr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>FlushInfoLog()<sp/>-<sp/>flushes<sp/>informational<sp/>log<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stderr<sp/>capturing:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>CaptureStderr()<sp/><sp/><sp/><sp/><sp/>-<sp/>starts<sp/>capturing<sp/>stderr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GetCapturedStderr()<sp/>-<sp/>stops<sp/>capturing<sp/>stderr<sp/>and<sp/>returns<sp/>the<sp/>captured</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Integer<sp/>types:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TypeWithSize<sp/><sp/><sp/>-<sp/>maps<sp/>an<sp/>integer<sp/>to<sp/>a<sp/>int<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Int32,<sp/>UInt32,<sp/>Int64,<sp/>UInt64,<sp/>TimeInMillis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>integers<sp/>of<sp/>known<sp/>sizes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>BiggestInt<sp/><sp/><sp/><sp/><sp/>-<sp/>the<sp/>biggest<sp/>signed<sp/>integer<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Command-line<sp/>utilities:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_FLAG()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>references<sp/>a<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_DECLARE_*()<sp/><sp/>-<sp/>declares<sp/>a<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_DEFINE_*()<sp/><sp/><sp/>-<sp/>defines<sp/>a<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GetArgvs()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>returns<sp/>the<sp/>command<sp/>line<sp/>as<sp/>a<sp/>vector<sp/>of<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Environment<sp/>variable<sp/>utilities:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GetEnv()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>gets<sp/>the<sp/>value<sp/>of<sp/>an<sp/>environment<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>BoolFromGTestEnv()<sp/><sp/><sp/>-<sp/>parses<sp/>a<sp/>bool<sp/>environment<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Int32FromGTestEnv()<sp/><sp/>-<sp/>parses<sp/>an<sp/>Int32<sp/>environment<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>StringFromGTestEnv()<sp/>-<sp/>parses<sp/>a<sp/>string<sp/>environment<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>for<sp/>GTEST_CHECK_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="gtest-port_8h_1158df8eb2f6338a36f13b8108fb36594" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_NAME<sp/>&quot;Google<sp/>Test&quot;</highlight></codeline>
<codeline lineno="159" refid="gtest-port_8h_16b4cd8e28f94b0a7952d27645d4da3db" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_FLAG_PREFIX<sp/>&quot;gtest_&quot;</highlight></codeline>
<codeline lineno="160" refid="gtest-port_8h_14899fab4f05f420b4b184bc05e8ad43b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_FLAG_PREFIX_UPPER<sp/>&quot;GTEST_&quot;</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>the<sp/>version<sp/>of<sp/>gcc<sp/>that<sp/>is<sp/>used<sp/>to<sp/>compile<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>40302<sp/>means<sp/>version<sp/>4.3.2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_GCC_VER_<sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(__GNUC__*10000<sp/>+<sp/>__GNUC_MINOR__*100<sp/>+<sp/>__GNUC_PATCHLEVEL__)</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>__GNUC__</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>the<sp/>platform<sp/>on<sp/>which<sp/>Google<sp/>Test<sp/>is<sp/>compiled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__CYGWIN__</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_OS_CYGWIN</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>__SYMBIAN32__</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_OS_SYMBIAN</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>TODO(kenton@google.com):<sp/>GTEST_OS_WINDOWS<sp/>is<sp/>currently<sp/>used<sp/>to<sp/>mean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>both<sp/>&quot;The<sp/>OS<sp/>is<sp/>Windows&quot;<sp/>and<sp/>&quot;The<sp/>compiler<sp/>is<sp/>MSVC&quot;.<sp/><sp/>These</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>meanings<sp/>really<sp/>should<sp/>be<sp/>separated<sp/>in<sp/>order<sp/>to<sp/>better<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Windows<sp/>compilers<sp/>other<sp/>than<sp/>MSVC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_OS_WINDOWS</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>__APPLE__</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_OS_MAC</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>__linux__</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_OS_LINUX</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>__MVS__</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_OS_ZOS</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined(__sun)<sp/>&amp;&amp;<sp/>defined(__SVR4)</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_OS_SOLARIS</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>whether<sp/>::std::string<sp/>and<sp/>::string<sp/>are<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GTEST_HAS_STD_STRING</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>The<sp/>user<sp/>didn&apos;t<sp/>tell<sp/>us<sp/>whether<sp/>::std::string<sp/>is<sp/>available,<sp/>so<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>figure<sp/>it<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GTEST_OS_WINDOWS</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>Assumes<sp/>that<sp/>exceptions<sp/>are<sp/>enabled<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_HAS_EXCEPTIONS</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_HAS_EXCEPTIONS<sp/>1</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>_HAS_EXCEPTIONS</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>GTEST_HAS_EXCEPTIONS<sp/>is<sp/>non-zero<sp/>iff<sp/>exceptions<sp/>are<sp/>enabled.<sp/><sp/>It<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>always<sp/>defined,<sp/>while<sp/>_HAS_EXCEPTIONS<sp/>is<sp/>defined<sp/>only<sp/>on<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_EXCEPTIONS<sp/>_HAS_EXCEPTIONS</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>On<sp/>Windows,<sp/>we<sp/>can<sp/>use<sp/>::std::string<sp/>if<sp/>the<sp/>compiler<sp/>version<sp/>is<sp/>VS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2005<sp/>or<sp/>above,<sp/>or<sp/>if<sp/>exceptions<sp/>are<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_STD_STRING<sp/>((_MSC_VER<sp/>&gt;=<sp/>1400)<sp/>||<sp/>GTEST_HAS_EXCEPTIONS)</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else<sp/><sp/>//<sp/>We<sp/>are<sp/>on<sp/>Linux<sp/>or<sp/>Mac<sp/>OS.</highlight></codeline>
<codeline lineno="208" refid="gtest-port_8h_1fc996bd9a7178c4f459980f9d7c908f1" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_EXCEPTIONS<sp/>0</highlight></codeline>
<codeline lineno="209" refid="gtest-port_8h_10fd9668b4f6fbe243464becee628432e" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_STD_STRING<sp/>1</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_OS_WINDOWS</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_STRING</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GTEST_HAS_GLOBAL_STRING</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>The<sp/>user<sp/>didn&apos;t<sp/>tell<sp/>us<sp/>whether<sp/>::string<sp/>is<sp/>available,<sp/>so<sp/>we<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>figure<sp/>it<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="gtest-port_8h_145fa310c460409d25247798b01f1f514" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_GLOBAL_STRING<sp/>0</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_GLOBAL_STRING</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GTEST_HAS_STD_WSTRING</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>The<sp/>user<sp/>didn&apos;t<sp/>tell<sp/>us<sp/>whether<sp/>::std::wstring<sp/>is<sp/>available,<sp/>so<sp/>we<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>figure<sp/>it<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(wan@google.com):<sp/>uses<sp/>autoconf<sp/>to<sp/>detect<sp/>whether<sp/>::std::wstring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>is<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GTEST_OS_CYGWIN)<sp/>||<sp/>defined(GTEST_OS_SOLARIS)</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>At<sp/>least<sp/>some<sp/>versions<sp/>of<sp/>cygwin<sp/>don&apos;t<sp/>support<sp/>::std::wstring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Solaris&apos;<sp/>libc++<sp/>doesn&apos;t<sp/>support<sp/>it<sp/>either.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_STD_WSTRING<sp/>0</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="233" refid="gtest-port_8h_156198e3f351faf67313eaeb0141f47a8" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_STD_WSTRING<sp/>GTEST_HAS_STD_STRING</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>defined(GTEST_OS_CYGWIN)<sp/>||<sp/>defined(GTEST_OS_SOLARIS)</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_WSTRING</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GTEST_HAS_GLOBAL_WSTRING</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>The<sp/>user<sp/>didn&apos;t<sp/>tell<sp/>us<sp/>whether<sp/>::wstring<sp/>is<sp/>available,<sp/>so<sp/>we<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>figure<sp/>it<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="gtest-port_8h_19ed4fa73ee05bba6c3d4a226f13ebe26" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_GLOBAL_WSTRING<sp/>GTEST_HAS_GLOBAL_STRING</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_GLOBAL_WSTRING</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_STRING<sp/>||<sp/>GTEST_HAS_GLOBAL_STRING<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_HAS_STD_WSTRING<sp/>||<sp/>GTEST_HAS_GLOBAL_WSTRING</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_STRING<sp/>||<sp/>GTEST_HAS_GLOBAL_STRING<sp/>||</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_HAS_STD_WSTRING<sp/>||<sp/>GTEST_HAS_GLOBAL_WSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_STRING</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;strstream&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_STRING</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>whether<sp/>RTTI<sp/>is<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GTEST_HAS_RTTI</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>The<sp/>user<sp/>didn&apos;t<sp/>tell<sp/>us<sp/>whether<sp/>RTTI<sp/>is<sp/>enabled,<sp/>so<sp/>we<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>figure<sp/>it<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_CPPRTTI<sp/><sp/>//<sp/>MSVC<sp/>defines<sp/>this<sp/>macro<sp/>iff<sp/>RTTI<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_RTTI<sp/>1</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_RTTI<sp/>0</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>_CPPRTTI</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Starting<sp/>with<sp/>version<sp/>4.3.2,<sp/>gcc<sp/>defines<sp/>__GXX_RTTI<sp/>iff<sp/>RTTI<sp/>is<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_GCC_VER_<sp/>&gt;=<sp/>40302</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>__GXX_RTTI</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_RTTI<sp/>1</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_RTTI<sp/>0</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>__GXX_RTTI</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>For<sp/>gcc<sp/>versions<sp/>smaller<sp/>than<sp/>4.3.2,<sp/>we<sp/>assume<sp/>RTTI<sp/>is<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_RTTI<sp/>1</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_GCC_VER<sp/>&gt;=<sp/>40302</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unknown<sp/>compiler<sp/>-<sp/>assume<sp/>RTTI<sp/>is<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="gtest-port_8h_1916695cd0aa5bf5d9068ce06e82f7a2f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_RTTI<sp/>1</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_RTTI</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>whether<sp/>&lt;pthread.h&gt;<sp/>is<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GTEST_HAS_PTHREAD</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>The<sp/>user<sp/>didn&apos;t<sp/>tell<sp/>us,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>figure<sp/>it<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GTEST_OS_LINUX)<sp/>||<sp/>defined(GTEST_OS_MAC)</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_PTHREAD<sp/>1</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="299" refid="gtest-port_8h_1b5815d752d5d97ed6b435ba0bb77d61d" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_PTHREAD<sp/>0</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_OS_LINUX<sp/>||<sp/>GTEST_OS_MAC</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_PTHREAD</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>whether<sp/>tr1/tuple<sp/>is<sp/>available.<sp/><sp/>If<sp/>you<sp/>have<sp/>tr1/tuple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>your<sp/>platform,<sp/>define<sp/>GTEST_HAS_TR1_TUPLE=1<sp/>for<sp/>both<sp/>the<sp/>Google</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>project<sp/>and<sp/>your<sp/>tests.<sp/>If<sp/>you<sp/>would<sp/>like<sp/>Google<sp/>Test<sp/>to<sp/>detect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tr1/tuple<sp/>on<sp/>your<sp/>platform<sp/>automatically,<sp/>please<sp/>open<sp/>an<sp/>issue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ticket<sp/>at<sp/>http://code.google.com/p/googletest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GTEST_HAS_TR1_TUPLE</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>The<sp/>user<sp/>didn&apos;t<sp/>tell<sp/>us,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>figure<sp/>it<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GCC<sp/>provides<sp/>&lt;tr1/tuple&gt;<sp/>since<sp/>4.0.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>(GTEST_GCC_VER_<sp/>&gt;=<sp/>40000)</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_TR1_TUPLE<sp/>1</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="316" refid="gtest-port_8h_13f48676808022aaa0b693087ed18e006" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_TR1_TUPLE<sp/>0</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>__GNUC__</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_TR1_TUPLE</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>avoid<sp/>conditional<sp/>compilation<sp/>everywhere,<sp/>we<sp/>make<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/>gtest-port.h&apos;s<sp/>responsibility<sp/>to<sp/>#include<sp/>the<sp/>header<sp/>implementing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tr1/tuple.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_TR1_TUPLE</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>GCC<sp/>implements<sp/>tr1/tuple<sp/>in<sp/>the<sp/>&lt;tr1/tuple&gt;<sp/>header.<sp/><sp/>This<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>conform<sp/>to<sp/>the<sp/>TR1<sp/>spec,<sp/>which<sp/>requires<sp/>the<sp/>header<sp/>to<sp/>be<sp/>&lt;tuple&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tr1/tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>compiler<sp/>is<sp/>not<sp/>GCC,<sp/>we<sp/>assume<sp/>the<sp/>user<sp/>is<sp/>using<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>spec-conforming<sp/>TR1<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>__GNUC__</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_TR1_TUPLE</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>whether<sp/>clone(2)<sp/>is<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Usually<sp/>it<sp/>will<sp/>only<sp/>be<sp/>available<sp/>on<sp/>Linux,<sp/>excluding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Linux<sp/>on<sp/>the<sp/>Itanium<sp/>architecture.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Also<sp/>see<sp/>http://linux.die.net/man/2/clone.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GTEST_HAS_CLONE</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>The<sp/>user<sp/>didn&apos;t<sp/>tell<sp/>us,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>figure<sp/>it<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GTEST_OS_LINUX)<sp/>&amp;&amp;<sp/>!defined(__ia64__)</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_CLONE<sp/>1</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="345" refid="gtest-port_8h_11bd86e20372e9ea966be0bc126088448" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_CLONE<sp/>0</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>defined(GTEST_OS_LINUX)<sp/>&amp;&amp;<sp/>!defined(__ia64__)</highlight></codeline>
<codeline lineno="347"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_CLONE</highlight></codeline>
<codeline lineno="349"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>whether<sp/>to<sp/>support<sp/>death<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_STRING<sp/>&amp;&amp;<sp/>GTEST_HAS_CLONE</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_DEATH_TEST</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>On<sp/>some<sp/>platforms,<sp/>&lt;regex.h&gt;<sp/>needs<sp/>someone<sp/>to<sp/>define<sp/>size_t,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/>won&apos;t<sp/>compile<sp/>otherwise.<sp/><sp/>We<sp/>can<sp/>#include<sp/>it<sp/>here<sp/>as<sp/>we<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/>included<sp/>&lt;stdlib.h&gt;,<sp/>which<sp/>is<sp/>guaranteed<sp/>to<sp/>define<sp/>size_t<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;stddef.h&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;regex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_STRING<sp/>&amp;&amp;<sp/>GTEST_HAS_CLONE</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>whether<sp/>to<sp/>support<sp/>value-parameterized<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>||<sp/>(_MSC_VER<sp/>&gt;=<sp/>1400)</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>TODO(vladl@google.com):<sp/>get<sp/>the<sp/>implementation<sp/>rid<sp/>of<sp/>vector<sp/>and<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>compile<sp/>on<sp/>MSVC<sp/>7.1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_PARAM_TEST</highlight></codeline>
<codeline lineno="369"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>defined(__GNUC__)<sp/>||<sp/>(_MSC_VER<sp/>&gt;=<sp/>1400)</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>whether<sp/>to<sp/>support<sp/>type-driven<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Typed<sp/>tests<sp/>need<sp/>&lt;typeinfo&gt;<sp/>and<sp/>variadic<sp/>macros,<sp/>which<sp/>gcc<sp/>and<sp/>VC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>8.0+<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>||<sp/>(_MSC_VER<sp/>&gt;=<sp/>1400)</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_TYPED_TEST</highlight></codeline>
<codeline lineno="377"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_TYPED_TEST_P</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>defined(__GNUC__)<sp/>||<sp/>(_MSC_VER<sp/>&gt;=<sp/>1400)</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>whether<sp/>to<sp/>support<sp/>Combine().<sp/>This<sp/>only<sp/>makes<sp/>sense<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//<sp/>value-parameterized<sp/>tests<sp/>are<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GTEST_HAS_PARAM_TEST)<sp/>&amp;&amp;<sp/>GTEST_HAS_TR1_TUPLE</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_HAS_COMBINE</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>defined(GTEST_HAS_PARAM_TEST)<sp/>&amp;&amp;<sp/>GTEST_HAS_TR1_TUPLE</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>whether<sp/>the<sp/>system<sp/>compiler<sp/>uses<sp/>UTF-16<sp/>for<sp/>encoding<sp/>wide<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GTEST_OS_WINDOWS)<sp/>||<sp/>defined(GTEST_OS_CYGWIN)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(GTEST_OS_SYMBIAN)</highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_WIDE_STRING_USES_UTF16_<sp/>1</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Defines<sp/>some<sp/>utility<sp/>macros.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>GNU<sp/>compiler<sp/>emits<sp/>a<sp/>warning<sp/>if<sp/>nested<sp/>&quot;if&quot;<sp/>statements<sp/>are<sp/>followed<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/>an<sp/>&quot;else&quot;<sp/>statement<sp/>and<sp/>braces<sp/>are<sp/>not<sp/>used<sp/>to<sp/>explicitly<sp/>disambiguate<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;else&quot;<sp/>binding.<sp/><sp/>This<sp/>leads<sp/>to<sp/>problems<sp/>with<sp/>code<sp/>like:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(gate)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ASSERT_*(condition)<sp/>&lt;&lt;<sp/>&quot;Some<sp/>message&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;switch<sp/>(0)<sp/>case<sp/>0:&quot;<sp/>idiom<sp/>is<sp/>used<sp/>to<sp/>suppress<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__INTEL_COMPILER</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_AMBIGUOUS_ELSE_BLOCKER_</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="405" refid="gtest-port_8h_1fef9217bc28183f8b5a0c0341dc0e9ce" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_AMBIGUOUS_ELSE_BLOCKER_<sp/>switch<sp/>(0)<sp/>case<sp/>0:<sp/><sp/>//<sp/>NOLINT</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>this<sp/>annotation<sp/>at<sp/>the<sp/>end<sp/>of<sp/>a<sp/>struct<sp/>/<sp/>class<sp/>definition<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//<sp/>prevent<sp/>the<sp/>compiler<sp/>from<sp/>optimizing<sp/>away<sp/>instances<sp/>that<sp/>are<sp/>never</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//<sp/>used.<sp/><sp/>This<sp/>is<sp/>useful<sp/>when<sp/>all<sp/>interesting<sp/>logic<sp/>happens<sp/>inside<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//<sp/>c&apos;tor<sp/>and<sp/>/<sp/>or<sp/>d&apos;tor.<sp/><sp/>Example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>struct<sp/>Foo<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Foo()<sp/>{<sp/>...<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}<sp/>GTEST_ATTRIBUTE_UNUSED_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(COMPILER_ICC)</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_ATTRIBUTE_UNUSED_<sp/>__attribute__<sp/>((unused))</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="419" refid="gtest-port_8h_1d6622fc3763a54b78963d4628a535862" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_ATTRIBUTE_UNUSED_</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>macro<sp/>to<sp/>disallow<sp/>the<sp/>evil<sp/>copy<sp/>constructor<sp/>and<sp/>operator=<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>be<sp/>used<sp/>in<sp/>the<sp/>private:<sp/>declarations<sp/>for<sp/>a<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="gtest-port_8h_1b08845a5f4649b939a17c573172fcdeb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(type)\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/>type(const<sp/>type<sp/>&amp;);\</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"><sp/><sp/>void<sp/>operator=(const<sp/>type<sp/>&amp;)</highlight></codeline>
<codeline lineno="427"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tell<sp/>the<sp/>compiler<sp/>to<sp/>warn<sp/>about<sp/>unused<sp/>return<sp/>values<sp/>for<sp/>functions<sp/>declared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>this<sp/>macro.<sp/><sp/>The<sp/>macro<sp/>should<sp/>be<sp/>used<sp/>on<sp/>function<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//<sp/>following<sp/>the<sp/>argument<sp/>list:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Sprocket*<sp/>AllocateSprocket()<sp/>GTEST_MUST_USE_RESULT_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>(GTEST_GCC_VER_<sp/>&gt;=<sp/>30400)<sp/>&amp;&amp;<sp/>!defined(COMPILER_ICC)</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_MUST_USE_RESULT_<sp/>__attribute__<sp/>((warn_unused_result))</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="436" refid="gtest-port_8h_1278b3d9816b7f2389f2cf362e8ba6a3c" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_MUST_USE_RESULT_</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>__GNUC__<sp/>&amp;&amp;<sp/>(GTEST_GCC_VER_<sp/>&gt;=<sp/>30400)<sp/>&amp;&amp;<sp/>!COMPILER_ICC</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">testing<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Message;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="namespacetesting_1_1internal_12f325a1ea8cfd7eab6843eb4592dde44" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1String" kindref="compound">String</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/>std::strstream<sp/>is<sp/>deprecated.<sp/><sp/>However,<sp/>we<sp/>have<sp/>to<sp/>use<sp/>it<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Windows<sp/>as<sp/>std::stringstream<sp/>won&apos;t<sp/>compile<sp/>on<sp/>Windows<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//<sp/>exceptions<sp/>are<sp/>disabled.<sp/><sp/>We<sp/>use<sp/>std::stringstream<sp/>on<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">//<sp/>platforms<sp/>to<sp/>avoid<sp/>compiler<sp/>warnings<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_STRING</highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"></highlight><highlight class="normal">typedef<sp/>::std::stringstream<sp/><ref refid="namespacetesting_1_1internal_12f325a1ea8cfd7eab6843eb4592dde44" kindref="member">StrStream</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor"></highlight><highlight class="normal">typedef<sp/>::std::strstream<sp/><ref refid="namespacetesting_1_1internal_12f325a1ea8cfd7eab6843eb4592dde44" kindref="member">StrStream</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_STRING</highlight></codeline>
<codeline lineno="456"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Defines<sp/>scoped_ptr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>implementation<sp/>of<sp/>scoped_ptr<sp/>is<sp/>PARTIAL<sp/>-<sp/>it<sp/>only<sp/>contains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enough<sp/>stuff<sp/>to<sp/>satisfy<sp/>Google<sp/>Test&apos;s<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="462" refid="classtesting_1_1internal_1_1scoped__ptr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1scoped__ptr" kindref="compound">scoped_ptr</ref><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="464" refid="classtesting_1_1internal_1_1scoped__ptr_1d64fd9cf7bd2fbedc33faab80936bc76" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_1d64fd9cf7bd2fbedc33faab80936bc76" kindref="member">scoped_ptr</ref>(T*<sp/>p<sp/>=<sp/>NULL)<sp/>:<sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_1e3a07cf93fd19d2be0f294e605c23f62" kindref="member">ptr_</ref>(p)<sp/>{}</highlight></codeline>
<codeline lineno="465" refid="classtesting_1_1internal_1_1scoped__ptr_1247b0c77a21d51f27162969ffbaba0b9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_1247b0c77a21d51f27162969ffbaba0b9" kindref="member">~scoped_ptr</ref>()<sp/>{<sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_18cc6f8f719e9984cab2620e66af9a2aa" kindref="member">reset</ref>();<sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="classtesting_1_1internal_1_1scoped__ptr_14f09b3605e25cc95de3f11605536897f" refkind="member"><highlight class="normal"><sp/><sp/>T&amp;<sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_14f09b3605e25cc95de3f11605536897f" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classtesting_1_1internal_1_1scoped__ptr_1e3a07cf93fd19d2be0f294e605c23f62" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="468" refid="classtesting_1_1internal_1_1scoped__ptr_16fd9083f55e1422d34cc5c224594dcc5" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_16fd9083f55e1422d34cc5c224594dcc5" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_1e3a07cf93fd19d2be0f294e605c23f62" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="469" refid="classtesting_1_1internal_1_1scoped__ptr_13cc9b026c4c227c0376245adae59cece" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_1e3a07cf93fd19d2be0f294e605c23f62" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="classtesting_1_1internal_1_1scoped__ptr_1422e6acaaee55a45525f98ef55ff2173" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_1422e6acaaee55a45525f98ef55ff2173" kindref="member">release</ref>()<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_1e3a07cf93fd19d2be0f294e605c23f62" kindref="member">ptr_</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_1e3a07cf93fd19d2be0f294e605c23f62" kindref="member">ptr_</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="classtesting_1_1internal_1_1scoped__ptr_18cc6f8f719e9984cab2620e66af9a2aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_18cc6f8f719e9984cab2620e66af9a2aa" kindref="member">reset</ref>(T*<sp/>p<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_1e3a07cf93fd19d2be0f294e605c23f62" kindref="member">ptr_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>&gt;<sp/>0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Makes<sp/>sure<sp/>T<sp/>is<sp/>a<sp/>complete<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_1e3a07cf93fd19d2be0f294e605c23f62" kindref="member">ptr_</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_1e3a07cf93fd19d2be0f294e605c23f62" kindref="member">ptr_</ref><sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="486" refid="classtesting_1_1internal_1_1scoped__ptr_1e3a07cf93fd19d2be0f294e605c23f62" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_1e3a07cf93fd19d2be0f294e605c23f62" kindref="member">ptr_</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr_10c40d5d0d3b15ec1f8308ab6d9310547" kindref="member">GTEST_DISALLOW_COPY_AND_ASSIGN_</ref>(<ref refid="classtesting_1_1internal_1_1scoped__ptr" kindref="compound">scoped_ptr</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal">};</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GTEST_HAS_DEATH_TEST</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Defines<sp/>RE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>simple<sp/>C++<sp/>wrapper<sp/>for<sp/>&lt;regex.h&gt;.<sp/><sp/>It<sp/>uses<sp/>the<sp/>POSIX<sp/>Enxtended</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Regular<sp/>Expression<sp/>syntax.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RE<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructs<sp/>an<sp/>RE<sp/>from<sp/>a<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_STRING</highlight></codeline>
<codeline lineno="501"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>RE(const<sp/>::std::string&amp;<sp/>regex)<sp/>{<sp/>Init(regex.c_str());<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_STRING</highlight></codeline>
<codeline lineno="503"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_GLOBAL_STRING</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>RE(const<sp/>::string&amp;<sp/>regex)<sp/>{<sp/>Init(regex.c_str());<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_GLOBAL_STRING</highlight></codeline>
<codeline lineno="507"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>RE(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>regex)<sp/>{<sp/>Init(regex);<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>~RE();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>string<sp/>representation<sp/>of<sp/>the<sp/>regex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pattern()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pattern_;<sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FullMatch(str,<sp/>re)<sp/>returns<sp/>true<sp/>iff<sp/>regular<sp/>expression<sp/>re<sp/>matches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>entire<sp/>str.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PartialMatch(str,<sp/>re)<sp/>returns<sp/>true<sp/>iff<sp/>regular<sp/>expression<sp/>re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>matches<sp/>a<sp/>substring<sp/>of<sp/>str<sp/>(including<sp/>str<sp/>itself).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(wan@google.com):<sp/>make<sp/>FullMatch()<sp/>and<sp/>PartialMatch()<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>str<sp/>contains<sp/>NUL<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_STRING</highlight></codeline>
<codeline lineno="522"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FullMatch(const<sp/>::std::string&amp;<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RE&amp;<sp/>re)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FullMatch(str.c_str(),<sp/>re);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PartialMatch(const<sp/>::std::string&amp;<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RE&amp;<sp/>re)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PartialMatch(str.c_str(),<sp/>re);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_STRING</highlight></codeline>
<codeline lineno="529"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_GLOBAL_STRING</highlight></codeline>
<codeline lineno="531"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FullMatch(const<sp/>::string&amp;<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RE&amp;<sp/>re)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FullMatch(str.c_str(),<sp/>re);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PartialMatch(const<sp/>::string&amp;<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RE&amp;<sp/>re)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PartialMatch(str.c_str(),<sp/>re);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_GLOBAL_STRING</highlight></codeline>
<codeline lineno="538"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FullMatch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RE&amp;<sp/>re);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PartialMatch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RE&amp;<sp/>re);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>regex);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>a<sp/>const<sp/>char*<sp/>instead<sp/>of<sp/>a<sp/>string,<sp/>as<sp/>Google<sp/>Test<sp/>may<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>string<sp/>is<sp/>not<sp/>available.<sp/><sp/>We<sp/>also<sp/>do<sp/>not<sp/>use<sp/>Google<sp/>Test&apos;s<sp/>own</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>String<sp/>type<sp/>here,<sp/>in<sp/>order<sp/>to<sp/>simplify<sp/>dependencies<sp/>between<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pattern_;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>regex_t<sp/>full_regex_;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>FullMatch().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>regex_t<sp/>partial_regex_;<sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>PartialMatch().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid_;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">};</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_DEATH_TEST</highlight></codeline>
<codeline lineno="556"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Defines<sp/>logging<sp/>utilities:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_LOG_()<sp/><sp/><sp/>-<sp/>logs<sp/>messages<sp/>at<sp/>the<sp/>specified<sp/>severity<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>LogToStderr()<sp/><sp/>-<sp/>directs<sp/>all<sp/>log<sp/>messages<sp/>to<sp/>stderr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>FlushInfoLog()<sp/>-<sp/>flushes<sp/>informational<sp/>log<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="namespacetesting_1_1internal_128a7485ef3f5f150ac9718facf55b4c2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_128a7485ef3f5f150ac9718facf55b4c2" kindref="member">GTestLogSeverity</ref><sp/>{</highlight></codeline>
<codeline lineno="563" refid="namespacetesting_1_1internal_128a7485ef3f5f150ac9718facf55b4c26eab59e3adc63c10ee3c7ab9b4158371" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesting_1_1internal_128a7485ef3f5f150ac9718facf55b4c26eab59e3adc63c10ee3c7ab9b4158371" kindref="member">GTEST_INFO</ref>,</highlight></codeline>
<codeline lineno="564" refid="namespacetesting_1_1internal_128a7485ef3f5f150ac9718facf55b4c271623c73cf79f1a4be31255eedbaef19" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesting_1_1internal_128a7485ef3f5f150ac9718facf55b4c271623c73cf79f1a4be31255eedbaef19" kindref="member">GTEST_WARNING</ref>,</highlight></codeline>
<codeline lineno="565" refid="namespacetesting_1_1internal_128a7485ef3f5f150ac9718facf55b4c2999c3fe1cf7b9f50f9ceb4fd4bcb2c76" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesting_1_1internal_128a7485ef3f5f150ac9718facf55b4c2999c3fe1cf7b9f50f9ceb4fd4bcb2c76" kindref="member">GTEST_ERROR</ref>,</highlight></codeline>
<codeline lineno="566" refid="namespacetesting_1_1internal_128a7485ef3f5f150ac9718facf55b4c244929c5a55dae8cdd5196c7b80a085f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesting_1_1internal_128a7485ef3f5f150ac9718facf55b4c244929c5a55dae8cdd5196c7b80a085f3" kindref="member">GTEST_FATAL</ref></highlight></codeline>
<codeline lineno="567"><highlight class="normal">};</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1d7bcc47e4c219390bd3135920ca0ae0b" kindref="member">GTestLog</ref>(<ref refid="namespacetesting_1_1internal_128a7485ef3f5f150ac9718facf55b4c2" kindref="member">GTestLogSeverity</ref><sp/>severity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572" refid="gtest-port_8h_188ad1882d1e6057321ba775eeab7fb26" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_LOG_(severity,<sp/>msg)\</highlight></codeline>
<codeline lineno="573"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::testing::internal::GTestLog(\</highlight></codeline>
<codeline lineno="574"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::GTEST_##severity,<sp/>__FILE__,<sp/>__LINE__,<sp/>\</highlight></codeline>
<codeline lineno="575"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(::testing::Message()<sp/>&lt;&lt;<sp/>(msg)).GetString().c_str())</highlight></codeline>
<codeline lineno="576"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="namespacetesting_1_1internal_1136a22e0e7a5535aaf88e4436e6fe43d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1136a22e0e7a5535aaf88e4436e6fe43d" kindref="member">LogToStderr</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="578" refid="namespacetesting_1_1internal_1dfed47bb3f9234ca6c3a6003b69ee602" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1dfed47bb3f9234ca6c3a6003b69ee602" kindref="member">FlushInfoLog</ref>()<sp/>{<sp/>fflush(NULL);<sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Defines<sp/>the<sp/>stderr<sp/>capturer:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>CaptureStderr<sp/><sp/><sp/><sp/><sp/>-<sp/>starts<sp/>capturing<sp/>stderr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GetCapturedStderr<sp/>-<sp/>stops<sp/>capturing<sp/>stderr<sp/>and<sp/>returns<sp/>the<sp/>captured<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GTEST_HAS_DEATH_TEST</highlight></codeline>
<codeline lineno="585"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>copy<sp/>of<sp/>all<sp/>command<sp/>line<sp/>arguments.<sp/><sp/>Set<sp/>by<sp/>InitGoogleTest().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal">extern<sp/>::std::vector&lt;String&gt;<sp/>g_argvs;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CaptureStderr();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GTEST_HAS_DEATH_TEST<sp/>implies<sp/>we<sp/>have<sp/>::std::string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal">::std::string<sp/>GetCapturedStderr();</highlight></codeline>
<codeline lineno="592"><highlight class="normal">const<sp/>::std::vector&lt;String&gt;&amp;<sp/>GetArgvs();</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_DEATH_TEST</highlight></codeline>
<codeline lineno="595"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Defines<sp/>synchronization<sp/>primitives.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>dummy<sp/>implementation<sp/>of<sp/>synchronization<sp/>primitives<sp/>(mutex,<sp/>lock,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>thread-local<sp/>variable).<sp/><sp/>Necessary<sp/>for<sp/>compiling<sp/>Google<sp/>Test<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mutex<sp/>is<sp/>not<sp/>supported<sp/>-<sp/>using<sp/>Google<sp/>Test<sp/>in<sp/>multiple<sp/>threads<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment">//<sp/>supported<sp/>on<sp/>such<sp/>platforms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="classtesting_1_1internal_1_1Mutex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1Mutex" kindref="compound">Mutex</ref><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="605" refid="classtesting_1_1internal_1_1Mutex_1c98eef913c0cc92d61c814223246dc39" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1Mutex_1c98eef913c0cc92d61c814223246dc39" kindref="member">Mutex</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="606" refid="classtesting_1_1internal_1_1Mutex_1ef72699121099a967c94913f52a333f7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1Mutex_1c98eef913c0cc92d61c814223246dc39" kindref="member">Mutex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="607" refid="classtesting_1_1internal_1_1Mutex_1a97ea28d27b7ca2799245fda377bd961" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1Mutex_1a97ea28d27b7ca2799245fda377bd961" kindref="member">AssertHeld</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="608" refid="classtesting_1_1internal_1_1Mutex_1b750ba1374a7029d4042fef9092f17926599ff46df87f87d2f7c0236395ace12" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="classtesting_1_1internal_1_1Mutex_1b750ba1374a7029d4042fef9092f17926599ff46df87f87d2f7c0236395ace12" kindref="member">NO_CONSTRUCTOR_NEEDED_FOR_STATIC_MUTEX</ref><sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="609"><highlight class="normal">};</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>cannot<sp/>call<sp/>it<sp/>MutexLock<sp/>directly<sp/>as<sp/>the<sp/>ctor<sp/>declaration<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//<sp/>conflict<sp/>with<sp/>a<sp/>macro<sp/>named<sp/>MutexLock,<sp/>which<sp/>is<sp/>defined<sp/>on<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">//<sp/>platforms.<sp/><sp/>Hence<sp/>the<sp/>typedef<sp/>trick<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="classtesting_1_1internal_1_1GTestMutexLock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1GTestMutexLock" kindref="compound">GTestMutexLock</ref><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="616" refid="classtesting_1_1internal_1_1GTestMutexLock_174c62a9202553b78ab28c216f98c4e72" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1GTestMutexLock_174c62a9202553b78ab28c216f98c4e72" kindref="member">GTestMutexLock</ref>(<ref refid="classtesting_1_1internal_1_1Mutex" kindref="compound">Mutex</ref>*)<sp/>{}<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal">};</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="namespacetesting_1_1internal_1f3be30c9155af46ee8da3aee31fae7f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1GTestMutexLock" kindref="compound">GTestMutexLock</ref><sp/><ref refid="classtesting_1_1internal_1_1GTestMutexLock" kindref="compound">MutexLock</ref>;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="622" refid="classtesting_1_1internal_1_1ThreadLocal" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1ThreadLocal" kindref="compound">ThreadLocal</ref><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="624" refid="classtesting_1_1internal_1_1ThreadLocal_1839bc830674be0f2e3fc58a24a378586" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1ThreadLocal_1839bc830674be0f2e3fc58a24a378586" kindref="member">ThreadLocal</ref>()<sp/>:<sp/><ref refid="classtesting_1_1internal_1_1ThreadLocal_1b7df109f3e5d2bcb16427e9a4409f835" kindref="member">value_</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="625" refid="classtesting_1_1internal_1_1ThreadLocal_13615d8adc37d5efff696f4c204d9d4e0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1ThreadLocal_1839bc830674be0f2e3fc58a24a378586" kindref="member">ThreadLocal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>:<sp/><ref refid="classtesting_1_1internal_1_1ThreadLocal_1b7df109f3e5d2bcb16427e9a4409f835" kindref="member">value_</ref>(value)<sp/>{}</highlight></codeline>
<codeline lineno="626" refid="classtesting_1_1internal_1_1ThreadLocal_1231ea3db38126ed45a8045b6f9600464" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><ref refid="classtesting_1_1internal_1_1ThreadLocal_1231ea3db38126ed45a8045b6f9600464" kindref="member">pointer</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classtesting_1_1internal_1_1ThreadLocal_1b7df109f3e5d2bcb16427e9a4409f835" kindref="member">value_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="627" refid="classtesting_1_1internal_1_1ThreadLocal_1dbdb68685f161d02f2ed2b4647040ca8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classtesting_1_1internal_1_1ThreadLocal_1231ea3db38126ed45a8045b6f9600464" kindref="member">pointer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classtesting_1_1internal_1_1ThreadLocal_1b7df109f3e5d2bcb16427e9a4409f835" kindref="member">value_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="628" refid="classtesting_1_1internal_1_1ThreadLocal_1a7847df3f5cdd19a574fea59775a6a56" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1ThreadLocal_1b7df109f3e5d2bcb16427e9a4409f835" kindref="member">value_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="629" refid="classtesting_1_1internal_1_1ThreadLocal_1a6f54ef195c22bbf5cbb8d41c7032a3f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{<sp/><ref refid="classtesting_1_1internal_1_1ThreadLocal_1b7df109f3e5d2bcb16427e9a4409f835" kindref="member">value_</ref><sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="631" refid="classtesting_1_1internal_1_1ThreadLocal_1b7df109f3e5d2bcb16427e9a4409f835" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="classtesting_1_1internal_1_1ThreadLocal_1b7df109f3e5d2bcb16427e9a4409f835" kindref="member">value_</ref>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal">};</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There&apos;s<sp/>no<sp/>portable<sp/>way<sp/>to<sp/>detect<sp/>the<sp/>number<sp/>of<sp/>threads,<sp/>so<sp/>we<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>0<sp/>to<sp/>indicate<sp/>that<sp/>we<sp/>cannot<sp/>detect<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636" refid="namespacetesting_1_1internal_1c799629c5b4f10c969a44db23e620a3d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1c799629c5b4f10c969a44db23e620a3d" kindref="member">GetThreadCount</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>synchronization<sp/>primitives<sp/>have<sp/>dummy<sp/>implementations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Therefore<sp/>Google<sp/>Test<sp/>is<sp/>not<sp/>thread-safe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640" refid="gtest-port_8h_189a97ba3a99a329609d410cee64ca847" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_IS_THREADSAFE<sp/>0</highlight></codeline>
<codeline lineno="641"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__SYMBIAN32__)<sp/>||<sp/>defined(__IBMCPP__)</highlight></codeline>
<codeline lineno="643"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Passing<sp/>non-POD<sp/>classes<sp/>through<sp/>ellipsis<sp/>(...)<sp/>crashes<sp/>the<sp/>ARM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compiler.<sp/><sp/>The<sp/>Nokia<sp/>Symbian<sp/>and<sp/>the<sp/>IBM<sp/>XL<sp/>C/C++<sp/>compiler<sp/>try<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instantiate<sp/>a<sp/>copy<sp/>constructor<sp/>for<sp/>objects<sp/>passed<sp/>through<sp/>ellipsis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(...),<sp/>failing<sp/>for<sp/>uncopyable<sp/>objects.<sp/><sp/>We<sp/>define<sp/>this<sp/>to<sp/>indicate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>fact.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_ELLIPSIS_NEEDS_COPY_<sp/>1</highlight></codeline>
<codeline lineno="650"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Nokia<sp/>Symbian<sp/>and<sp/>IBM<sp/>XL<sp/>C/C++<sp/>compilers<sp/>cannot<sp/>decide<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="comment">//<sp/>const<sp/>T&amp;<sp/>and<sp/>const<sp/>T*<sp/>in<sp/>a<sp/>function<sp/>template.<sp/><sp/>These<sp/>compilers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_can_<sp/>decide<sp/>between<sp/>class<sp/>template<sp/>specializations<sp/>for<sp/>T<sp/>and<sp/>T*,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>a<sp/>tr1::type_traits-like<sp/>is_pointer<sp/>works.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_NEEDS_IS_POINTER_<sp/>1</highlight></codeline>
<codeline lineno="656"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>defined(__SYMBIAN32__)<sp/>||<sp/>defined(__IBMCPP__)</highlight></codeline>
<codeline lineno="658"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">_value&gt;</highlight></codeline>
<codeline lineno="660" refid="structtesting_1_1internal_1_1bool__constant" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">bool_constant</ref><sp/>{</highlight></codeline>
<codeline lineno="661" refid="structtesting_1_1internal_1_1bool__constant_11613a5cefa36e8be056e47179f6725a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">bool_constant&lt;bool_value&gt;</ref><sp/><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">type</ref>;</highlight></codeline>
<codeline lineno="662" refid="structtesting_1_1internal_1_1bool__constant_17f838ce0f0c51ef62c1ae5c8cc909350" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1bool__constant_17f838ce0f0c51ef62c1ae5c8cc909350" kindref="member">value</ref><sp/>=<sp/>bool_value;</highlight></codeline>
<codeline lineno="663"><highlight class="normal">};</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">_value&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">bool_constant&lt;bool_value&gt;::value</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="namespacetesting_1_1internal_1cfd63a63b1a68bf3ac3502206fe5e1aa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">bool_constant&lt;false&gt;</ref><sp/><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">false_type</ref>;</highlight></codeline>
<codeline lineno="667" refid="namespacetesting_1_1internal_151d53d13936f531880ad6bd101866391" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">bool_constant&lt;true&gt;</ref><sp/><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">true_type</ref>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="670" refid="structtesting_1_1internal_1_1is__pointer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1is__pointer" kindref="compound">is_pointer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">false_type</ref><sp/>{};</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="673" refid="structtesting_1_1internal_1_1is__pointer_3_01T_01_5_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1is__pointer" kindref="compound">is_pointer</ref>&lt;T*&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">true_type</ref><sp/>{};</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Defines<sp/>BiggestInt<sp/>as<sp/>the<sp/>biggest<sp/>signed<sp/>integer<sp/>type<sp/>the<sp/>compiler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">//<sp/>supports.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GTEST_OS_WINDOWS</highlight></codeline>
<codeline lineno="679"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__int64<sp/><ref refid="namespacetesting_1_1internal_19992177d67caf887d92231eb20bc23f7" kindref="member">BiggestInt</ref>;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="681" refid="namespacetesting_1_1internal_19992177d67caf887d92231eb20bc23f7" refkind="member"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_19992177d67caf887d92231eb20bc23f7" kindref="member">BiggestInt</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_OS_WINDOWS</highlight></codeline>
<codeline lineno="683"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>number<sp/>a<sp/>BiggestInt<sp/>can<sp/>represent.<sp/><sp/>This<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="comment">//<sp/>works<sp/>no<sp/>matter<sp/>BiggestInt<sp/>is<sp/>represented<sp/>in<sp/>one&apos;s<sp/>complement<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="comment">//<sp/>two&apos;s<sp/>complement.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>cannot<sp/>rely<sp/>on<sp/>numeric_limits<sp/>in<sp/>STL,<sp/>as<sp/>__int64<sp/>and<sp/>long<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>not<sp/>part<sp/>of<sp/>standard<sp/>C++<sp/>and<sp/>numeric_limits<sp/>doesn&apos;t<sp/>need<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="comment">//<sp/>defined<sp/>for<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="namespacetesting_1_1internal_124166884965e4288f0b587c512f04b8f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_19992177d67caf887d92231eb20bc23f7" kindref="member">BiggestInt</ref><sp/><ref refid="namespacetesting_1_1internal_124166884965e4288f0b587c512f04b8f" kindref="member">kMaxBiggestInt</ref><sp/>=</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>~(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacetesting_1_1internal_19992177d67caf887d92231eb20bc23f7" kindref="member">BiggestInt</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)<sp/>&lt;&lt;<sp/>(8*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacetesting_1_1internal_19992177d67caf887d92231eb20bc23f7" kindref="member">BiggestInt</ref>)<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>template<sp/>class<sp/>serves<sp/>as<sp/>a<sp/>compile-time<sp/>function<sp/>from<sp/>size<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment">//<sp/>type.<sp/><sp/>It<sp/>maps<sp/>a<sp/>size<sp/>in<sp/>bytes<sp/>to<sp/>a<sp/>primitive<sp/>type<sp/>with<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="comment">//<sp/>size.<sp/>e.g.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TypeWithSize&lt;4&gt;::UInt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>typedef-ed<sp/>to<sp/>be<sp/>unsigned<sp/>int<sp/>(unsigned<sp/>integer<sp/>made<sp/>up<sp/>of<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bytes).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Such<sp/>functionality<sp/>should<sp/>belong<sp/>to<sp/>STL,<sp/>but<sp/>I<sp/>cannot<sp/>find<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment">//<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Google<sp/>Test<sp/>uses<sp/>this<sp/>class<sp/>in<sp/>the<sp/>implementation<sp/>of<sp/>floating-point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">//<sp/>comparison.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>now<sp/>it<sp/>only<sp/>handles<sp/>UInt<sp/>(unsigned<sp/>int)<sp/>as<sp/>that&apos;s<sp/>all<sp/>Google<sp/>Test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">//<sp/>needs.<sp/><sp/>Other<sp/>types<sp/>can<sp/>be<sp/>easily<sp/>added<sp/>in<sp/>the<sp/>future<sp/>if<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arises.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size&gt;</highlight></codeline>
<codeline lineno="713" refid="classtesting_1_1internal_1_1TypeWithSize" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1TypeWithSize" kindref="compound">TypeWithSize</ref><sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>the<sp/>user<sp/>from<sp/>using<sp/>TypeWithSize&lt;N&gt;<sp/>with<sp/>incorrect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>values<sp/>of<sp/>N.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="classtesting_1_1internal_1_1TypeWithSize_1adebd49e9739f576ff09cb2b0ef5a208" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1TypeWithSize_1adebd49e9739f576ff09cb2b0ef5a208" kindref="member">UInt</ref>;</highlight></codeline>
<codeline lineno="718"><highlight class="normal">};</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>specialization<sp/>for<sp/>size<sp/>4.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="722" refid="classtesting_1_1internal_1_1TypeWithSize_3_014_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1TypeWithSize" kindref="compound">TypeWithSize</ref>&lt;4&gt;<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unsigned<sp/>int<sp/>has<sp/>size<sp/>4<sp/>in<sp/>both<sp/>gcc<sp/>and<sp/>MSVC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>base/basictypes.h<sp/>doesn&apos;t<sp/>compile<sp/>on<sp/>Windows,<sp/>we<sp/>cannot<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uint32,<sp/>uint64,<sp/>and<sp/>etc<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="classtesting_1_1internal_1_1TypeWithSize_3_014_01_4_1fd38548a58e66083a93f7c31d7f81cf5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Int;</highlight></codeline>
<codeline lineno="729" refid="classtesting_1_1internal_1_1TypeWithSize_3_014_01_4_1f553cbff413a7e2072a7874b7f5db8d0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1TypeWithSize_1adebd49e9739f576ff09cb2b0ef5a208" kindref="member">UInt</ref>;</highlight></codeline>
<codeline lineno="730"><highlight class="normal">};</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>specialization<sp/>for<sp/>size<sp/>8.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="734" refid="classtesting_1_1internal_1_1TypeWithSize_3_018_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1TypeWithSize" kindref="compound">TypeWithSize</ref>&lt;8&gt;<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GTEST_OS_WINDOWS</highlight></codeline>
<codeline lineno="737"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__int64<sp/>Int;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int64<sp/><ref refid="classtesting_1_1internal_1_1TypeWithSize_1adebd49e9739f576ff09cb2b0ef5a208" kindref="member">UInt</ref>;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="740" refid="classtesting_1_1internal_1_1TypeWithSize_3_018_01_4_1c4cda6f25d170a2a84c316231dec684b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Int;<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741" refid="classtesting_1_1internal_1_1TypeWithSize_3_018_01_4_1df28c86deb4206268dc6bd0c516a0adb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1TypeWithSize_1adebd49e9739f576ff09cb2b0ef5a208" kindref="member">UInt</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_OS_WINDOWS</highlight></codeline>
<codeline lineno="743"><highlight class="preprocessor"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Integer<sp/>types<sp/>of<sp/>known<sp/>sizes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746" refid="namespacetesting_1_1internal_124b6e0b8ea195d5ccee473d5ade4bcbf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1TypeWithSize" kindref="compound">TypeWithSize&lt;4&gt;::Int</ref><sp/><ref refid="namespacetesting_1_1internal_124b6e0b8ea195d5ccee473d5ade4bcbf" kindref="member">Int32</ref>;</highlight></codeline>
<codeline lineno="747" refid="namespacetesting_1_1internal_1ca264fcc31afb70922314556daa3c76d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1TypeWithSize" kindref="compound">TypeWithSize&lt;4&gt;::UInt</ref><sp/><ref refid="namespacetesting_1_1internal_1ca264fcc31afb70922314556daa3c76d" kindref="member">UInt32</ref>;</highlight></codeline>
<codeline lineno="748" refid="namespacetesting_1_1internal_1a75b134470b713db97686f1f3df3ffd7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1TypeWithSize" kindref="compound">TypeWithSize&lt;8&gt;::Int</ref><sp/><ref refid="namespacetesting_1_1internal_1a75b134470b713db97686f1f3df3ffd7" kindref="member">Int64</ref>;</highlight></codeline>
<codeline lineno="749" refid="namespacetesting_1_1internal_138e8c1dd01d712e6cddd93c394b02d44" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1TypeWithSize" kindref="compound">TypeWithSize&lt;8&gt;::UInt</ref><sp/><ref refid="namespacetesting_1_1internal_138e8c1dd01d712e6cddd93c394b02d44" kindref="member">UInt64</ref>;</highlight></codeline>
<codeline lineno="750" refid="namespacetesting_1_1internal_19876512f16083243cd3632f48ea32a40" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1TypeWithSize" kindref="compound">TypeWithSize&lt;8&gt;::Int</ref><sp/><ref refid="namespacetesting_1_1internal_19876512f16083243cd3632f48ea32a40" kindref="member">TimeInMillis</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Represents<sp/>time<sp/>in<sp/>milliseconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Utilities<sp/>for<sp/>command<sp/>line<sp/>flags<sp/>and<sp/>environment<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>wrapper<sp/>for<sp/>getenv()<sp/>that<sp/>works<sp/>on<sp/>Linux,<sp/>Windows,<sp/>and<sp/>Mac<sp/>OS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755" refid="namespacetesting_1_1internal_14bfb241fd542948d5e10f3292147b7a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetesting_1_1internal_14bfb241fd542948d5e10f3292147b7a5" kindref="member">GetEnv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32_WCE<sp/><sp/>//<sp/>We<sp/>are<sp/>on<sp/>Windows<sp/>CE.</highlight></codeline>
<codeline lineno="757"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CE<sp/>has<sp/>no<sp/>environment<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(GTEST_OS_WINDOWS)<sp/><sp/>//<sp/>We<sp/>are<sp/>on<sp/>Windows<sp/>proper.</highlight></codeline>
<codeline lineno="760"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MSVC<sp/>8<sp/>deprecates<sp/>getenv(),<sp/>so<sp/>we<sp/>want<sp/>to<sp/>suppress<sp/>warning<sp/>4996</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(deprecated<sp/>function)<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(push)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Saves<sp/>the<sp/>current<sp/>warning<sp/>state.</highlight></codeline>
<codeline lineno="763"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4996)<sp/><sp/>//<sp/>Temporarily<sp/>disables<sp/>warning<sp/>4996.</highlight></codeline>
<codeline lineno="764"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getenv(name);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(pop)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Restores<sp/>the<sp/>warning<sp/>state.</highlight></codeline>
<codeline lineno="766"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else<sp/><sp/>//<sp/>We<sp/>are<sp/>on<sp/>Linux<sp/>or<sp/>Mac<sp/>OS.</highlight></codeline>
<codeline lineno="767"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getenv(name);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="769"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32_WCE</highlight></codeline>
<codeline lineno="772"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>Windows<sp/>CE<sp/>has<sp/>no<sp/>C<sp/>library.<sp/>The<sp/>abort()<sp/>function<sp/>is<sp/>used<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="comment">//<sp/>several<sp/>places<sp/>in<sp/>Google<sp/>Test.<sp/>This<sp/>implementation<sp/>provides<sp/>a<sp/>reasonable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment">//<sp/>imitation<sp/>of<sp/>standard<sp/>behaviour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_14745413dab28201711f46860bdf5f8df" kindref="member">abort</ref>();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="777" refid="namespacetesting_1_1internal_14745413dab28201711f46860bdf5f8df" refkind="member"><highlight class="preprocessor"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_14745413dab28201711f46860bdf5f8df" kindref="member">abort</ref>()<sp/>{<ref refid="namespacetesting_1_1internal_14745413dab28201711f46860bdf5f8df" kindref="member"> ::abort</ref>();<sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>_WIN32_WCE</highlight></codeline>
<codeline lineno="779"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DO<sp/>NOT<sp/>USE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GTEST_CHECK_<sp/>is<sp/>an<sp/>all-mode<sp/>assert.<sp/>It<sp/>aborts<sp/>the<sp/>program<sp/>if<sp/>the<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>not<sp/>satisfied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Synopsys:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GTEST_CHECK_(boolean_condition);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GTEST_CHECK_(boolean_condition)<sp/>&lt;&lt;<sp/>&quot;Additional<sp/>message&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>This<sp/>checks<sp/>the<sp/>condition<sp/>and<sp/>if<sp/>the<sp/>condition<sp/>is<sp/>not<sp/>satisfied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>it<sp/>prints<sp/>message<sp/>about<sp/>the<sp/>condition<sp/>violation,<sp/>including<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>condition<sp/>itself,<sp/>plus<sp/>additional<sp/>message<sp/>streamed<sp/>into<sp/>it,<sp/>if<sp/>any,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>then<sp/>it<sp/>aborts<sp/>the<sp/>program.<sp/>It<sp/>aborts<sp/>the<sp/>program<sp/>irrespective<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>whether<sp/>it<sp/>is<sp/>built<sp/>in<sp/>the<sp/>debug<sp/>mode<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794" refid="classtesting_1_1internal_1_1GTestCheckProvider" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1GTestCheckProvider" kindref="compound">GTestCheckProvider</ref><sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="796" refid="classtesting_1_1internal_1_1GTestCheckProvider_10d217fc3b141680c698c1b4b88e1e9f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestCheckProvider_10d217fc3b141680c698c1b4b88e1e9f3" kindref="member">GTestCheckProvider</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>condition,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestCheckProvider_1b1912d78c8661bd0614185c6627f415a" kindref="member">FormatFileLocation</ref>(file,<sp/>line);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>::std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ERROR:<sp/>Condition<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>condition<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>failed.<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="800" refid="classtesting_1_1internal_1_1GTestCheckProvider_1389abd44d5f8b7878c607ac17887053b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestCheckProvider_1389abd44d5f8b7878c607ac17887053b" kindref="member">~GTestCheckProvider</ref>()<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>::std::cerr<sp/>&lt;&lt;<sp/>::std::endl;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesting_1_1internal_14745413dab28201711f46860bdf5f8df" kindref="member">abort</ref>();</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="804" refid="classtesting_1_1internal_1_1GTestCheckProvider_1b1912d78c8661bd0614185c6627f415a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1GTestCheckProvider_1b1912d78c8661bd0614185c6627f415a" kindref="member">FormatFileLocation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>file&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::std::cerr<sp/>&lt;&lt;<sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="811"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::std::cerr<sp/>&lt;&lt;<sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;):&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="813"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::std::cerr<sp/>&lt;&lt;<sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="815"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="817" refid="classtesting_1_1internal_1_1GTestCheckProvider_1792d59eb02feb707ec9ea8d55e3394ef" refkind="member"><highlight class="normal"><sp/><sp/>::std::ostream&amp;<sp/><ref refid="classtesting_1_1internal_1_1GTestCheckProvider_1792d59eb02feb707ec9ea8d55e3394ef" kindref="member">GetStream</ref>()<sp/>{<sp/>return<sp/>::std::cerr;<sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal">};</highlight></codeline>
<codeline lineno="819" refid="gtest-port_8h_1b4e06887e347fd27742a56dfd5bff91e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_CHECK_(condition)<sp/>\</highlight></codeline>
<codeline lineno="820"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_AMBIGUOUS_ELSE_BLOCKER_<sp/>\</highlight></codeline>
<codeline lineno="821"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(condition)<sp/>\</highlight></codeline>
<codeline lineno="822"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>\</highlight></codeline>
<codeline lineno="823"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>\</highlight></codeline>
<codeline lineno="824"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::GTestCheckProvider(\</highlight></codeline>
<codeline lineno="825"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#condition,<sp/>__FILE__,<sp/>__LINE__).GetStream()</highlight></codeline>
<codeline lineno="826"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macro<sp/>for<sp/>referencing<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828" refid="gtest-port_8h_1a9537b08f663cffc361cdeb940705731" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_FLAG(name)<sp/>FLAGS_gtest_##name</highlight></codeline>
<codeline lineno="829"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macros<sp/>for<sp/>declaring<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831" refid="gtest-port_8h_1ec8daec67eb6f6ce40bded77d26d76ef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_DECLARE_bool_(name)<sp/>extern<sp/>bool<sp/>GTEST_FLAG(name)</highlight></codeline>
<codeline lineno="832" refid="gtest-port_8h_1c164b439f6e7ff87cb870cd1d274925c" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_DECLARE_int32_(name)<sp/>\</highlight></codeline>
<codeline lineno="833"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>extern<sp/>::testing::internal::Int32<sp/>GTEST_FLAG(name)</highlight></codeline>
<codeline lineno="834" refid="gtest-port_8h_1976ec43f6217dde8e3bfded5076b2e5e" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_DECLARE_string_(name)<sp/>\</highlight></codeline>
<codeline lineno="835"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>extern<sp/>::testing::internal::String<sp/>GTEST_FLAG(name)</highlight></codeline>
<codeline lineno="836"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macros<sp/>for<sp/>defining<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838" refid="gtest-port_8h_1cb3ab36afc4a59bd29cf3ccff12e5768" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_DEFINE_bool_(name,<sp/>default_val,<sp/>doc)<sp/>\</highlight></codeline>
<codeline lineno="839"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bool<sp/>GTEST_FLAG(name)<sp/>=<sp/>(default_val)</highlight></codeline>
<codeline lineno="840" refid="gtest-port_8h_15255c79a2ea5baa5e66ffdf2eb1f1b77" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_DEFINE_int32_(name,<sp/>default_val,<sp/>doc)<sp/>\</highlight></codeline>
<codeline lineno="841"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::testing::internal::Int32<sp/>GTEST_FLAG(name)<sp/>=<sp/>(default_val)</highlight></codeline>
<codeline lineno="842" refid="gtest-port_8h_12b3fdd99e7ddfede323b1bf0cd3dc7b0" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GTEST_DEFINE_string_(name,<sp/>default_val,<sp/>doc)<sp/>\</highlight></codeline>
<codeline lineno="843"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::testing::internal::String<sp/>GTEST_FLAG(name)<sp/>=<sp/>(default_val)</highlight></codeline>
<codeline lineno="844"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parses<sp/>&apos;str&apos;<sp/>for<sp/>a<sp/>32-bit<sp/>signed<sp/>integer.<sp/><sp/>If<sp/>successful,<sp/>writes<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>*value<sp/>and<sp/>returns<sp/>true;<sp/>otherwise<sp/>leaves<sp/>*value<sp/>unchanged<sp/>and<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment">//<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(chandlerc):<sp/>Find<sp/>a<sp/>better<sp/>way<sp/>to<sp/>refactor<sp/>flag<sp/>and<sp/>environment<sp/>parsing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="comment">//<sp/>out<sp/>of<sp/>both<sp/>gtest-port.cc<sp/>and<sp/>gtest.cc<sp/>to<sp/>avoid<sp/>exporting<sp/>this<sp/>utility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1ec8fe8ad62e268de1acbb6db62ae0eda" kindref="member">ParseInt32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Message&amp;<sp/>src_text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/><ref refid="namespacetesting_1_1internal_124b6e0b8ea195d5ccee473d5ade4bcbf" kindref="member">Int32</ref>*<sp/>value);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parses<sp/>a<sp/>bool/Int32/string<sp/>from<sp/>the<sp/>environment<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="comment">//<sp/>corresponding<sp/>to<sp/>the<sp/>given<sp/>Google<sp/>Test<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1448cba1f8ab67d66b52629959993c621" kindref="member">BoolFromGTestEnv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>flag,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>default_val);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><ref refid="namespacetesting_1_1internal_124b6e0b8ea195d5ccee473d5ade4bcbf" kindref="member">Int32</ref><sp/><ref refid="namespacetesting_1_1internal_1ad50bd05e866f522a61def1c001c2823" kindref="member">Int32FromGTestEnv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>flag,<sp/><ref refid="namespacetesting_1_1internal_124b6e0b8ea195d5ccee473d5ade4bcbf" kindref="member">Int32</ref><sp/>default_val);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetesting_1_1internal_113668db46614a266f80ca7d3062e5058" kindref="member">StringFromGTestEnv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>flag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>default_val);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_</highlight></codeline>
    </programlisting>
    <location file="/home/Mario/Escritorio/EC3/src/gtest/internal/gtest-port.h"/>
  </compounddef>
</doxygen>
