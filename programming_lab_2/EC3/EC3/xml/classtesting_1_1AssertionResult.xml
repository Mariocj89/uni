<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="classtesting_1_1AssertionResult" kind="class" prot="public">
    <compoundname>testing::AssertionResult</compoundname>
    <includes refid="gtest_8h" local="no">gtest.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1AssertionResult_115bb10ebc15892d1ae7d9cd4b1d61901" prot="private" static="no" mutable="no">
        <type><ref refid="classtesting_1_1internal_1_1String" kindref="compound">internal::String</ref></type>
        <definition>internal::String testing::AssertionResult::failure_message_</definition>
        <argsstring></argsstring>
        <name>failure_message_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/gtest.h" line="177" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/gtest.h" bodystart="177" bodyend="-1"/>
        <referencedby refid="classtesting_1_1AssertionResult_1cea6bc1ad95e884256239f66b9bcc932" compoundref="gtest_8h" startline="167" endline="167">failure_message</referencedby>
        <referencedby refid="classtesting_1_1AssertionResult_1ab619647c071b6e2cca9cd1efa2d4bd6" compoundref="gtest_8h" startline="164" endline="164">operator bool</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtesting_1_1AssertionResult_1267aaa36088ac85912d7419f8fe0341f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>AssertionResult AssertionSuccess</definition>
        <argsstring>()</argsstring>
        <name>AssertionSuccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/gtest.h" line="160"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1AssertionResult_1985d9ec766c8ba052e1608c35406e355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>AssertionResult AssertionFailure</definition>
        <argsstring>(const Message &amp;)</argsstring>
        <name>AssertionFailure</name>
        <param>
          <type>const <ref refid="classtesting_1_1Message" kindref="compound">Message</ref> &amp;</type>
          <defname>msg</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/gtest.h" line="161"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1AssertionResult_1ab619647c071b6e2cca9cd1efa2d4bd6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::AssertionResult::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/gtest.h" line="164" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/gtest.h" bodystart="164" bodyend="164"/>
        <references refid="classtesting_1_1internal_1_1String_188be98337a01ae18eb6c3f084288e0a5" compoundref="gtest-string_8h" startline="285" endline="285">testing::internal::String::c_str</references>
        <references refid="classtesting_1_1AssertionResult_115bb10ebc15892d1ae7d9cd4b1d61901" compoundref="gtest_8h" startline="177">failure_message_</references>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1AssertionResult_1cea6bc1ad95e884256239f66b9bcc932" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* testing::AssertionResult::failure_message</definition>
        <argsstring>() const</argsstring>
        <name>failure_message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/gtest.h" line="167" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/gtest.h" bodystart="167" bodyend="167"/>
        <references refid="classtesting_1_1internal_1_1String_188be98337a01ae18eb6c3f084288e0a5" compoundref="gtest-string_8h" startline="285" endline="285">testing::internal::String::c_str</references>
        <references refid="classtesting_1_1AssertionResult_115bb10ebc15892d1ae7d9cd4b1d61901" compoundref="gtest_8h" startline="177">failure_message_</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1AssertionResult_11f2e093a8aedb6f4939d10e3ac6df302" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::AssertionResult::AssertionResult</definition>
        <argsstring>()</argsstring>
        <name>AssertionResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/gtest.h" line="171" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/gtest.h" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1AssertionResult_1ab0344c999d5ad8cd99068ba8d70e0a9" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::AssertionResult::AssertionResult</definition>
        <argsstring>(const internal::String &amp;failure_message)</argsstring>
        <name>AssertionResult</name>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1String" kindref="compound">internal::String</ref> &amp;</type>
          <declname>failure_message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Mario/Escritorio/EC3/src/gtest/gtest.h" line="174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="16">
        <label>testing::AssertionResult</label>
        <link refid="classtesting_1_1AssertionResult"/>
        <childnode refid="17" relation="usage">
          <edgelabel>failure_message_</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>testing::internal::String</label>
        <link refid="classtesting_1_1internal_1_1String"/>
      </node>
    </collaborationgraph>
    <location file="/home/Mario/Escritorio/EC3/src/gtest/gtest.h" line="156" bodyfile="/home/Mario/Escritorio/EC3/src/gtest/gtest.h" bodystart="156" bodyend="178"/>
    <listofallmembers>
      <member refid="classtesting_1_1AssertionResult_1985d9ec766c8ba052e1608c35406e355" prot="public" virt="non-virtual"><scope>testing::AssertionResult</scope><name>AssertionFailure</name></member>
      <member refid="classtesting_1_1AssertionResult_11f2e093a8aedb6f4939d10e3ac6df302" prot="private" virt="non-virtual"><scope>testing::AssertionResult</scope><name>AssertionResult</name></member>
      <member refid="classtesting_1_1AssertionResult_1ab0344c999d5ad8cd99068ba8d70e0a9" prot="private" virt="non-virtual"><scope>testing::AssertionResult</scope><name>AssertionResult</name></member>
      <member refid="classtesting_1_1AssertionResult_1267aaa36088ac85912d7419f8fe0341f" prot="public" virt="non-virtual"><scope>testing::AssertionResult</scope><name>AssertionSuccess</name></member>
      <member refid="classtesting_1_1AssertionResult_1cea6bc1ad95e884256239f66b9bcc932" prot="public" virt="non-virtual"><scope>testing::AssertionResult</scope><name>failure_message</name></member>
      <member refid="classtesting_1_1AssertionResult_115bb10ebc15892d1ae7d9cd4b1d61901" prot="private" virt="non-virtual"><scope>testing::AssertionResult</scope><name>failure_message_</name></member>
      <member refid="classtesting_1_1AssertionResult_1ab619647c071b6e2cca9cd1efa2d4bd6" prot="public" virt="non-virtual"><scope>testing::AssertionResult</scope><name>operator bool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
